{
  "script": "return (function getRequest(index, options) {\n    var NAMESPACE = '__webdriverajax';\n    var PKG_PREFIX = '[wdio-intercept-service]: ';\n\n    function getFromSessionStorage() {\n      var rawData = window.sessionStorage.getItem(NAMESPACE);\n      var parsed;\n      if (rawData) {\n        try {\n          parsed = JSON.parse(rawData);\n        } catch (e) {\n          throw new Error(\n            PKG_PREFIX + 'Could not parse sessionStorage data: ' + e.message\n          );\n        }\n      }\n      return parsed;\n    }\n    function getAllRequests() {\n      // Session storage will always return an array that can be mutated freely.\n      if (window.sessionStorage && window.sessionStorage.getItem) {\n        return getFromSessionStorage() || [];\n      }\n      // But if we have to use the active namespace array, then return a copy of it.\n      var shouldClone = window[NAMESPACE].requests;\n      return shouldClone ? shouldClone.slice() : [];\n    }\n    function isComplete(r) {\n      return typeof r.__fulfilled === 'number';\n    }\n\n    var requests = getAllRequests();\n\n    var shouldSortByEnd = String(options.orderBy).toUpperCase() !== 'START';\n    if (shouldSortByEnd) {\n      // Sort ascending by time of fulfillment. If not fulfilled yet, sort to the end!\n      requests.sort(function (a, b) {\n        var hasA = isComplete(a);\n        var hasB = isComplete(b);\n        if (hasA && hasB) return a.__fulfilled - b.__fulfilled;\n        if (hasA) return -1; // Only A is fulfilled, so order A before B\n        if (hasB) return 1; // Only B is fulfilled, so order A after B\n        return 0; // Preserve ordering of A & B.\n      });\n    }\n\n    var includePending = Boolean(options.includePending);\n    if (index == null) {\n      return includePending ? requests : requests.filter(isComplete);\n    }\n\n    if (!includePending) {\n      // Filter out the pending requests and index only into the completed requests.\n      return requests.filter(isComplete)[index];\n    }\n    return requests[index];\n  }).apply(null, arguments)",
  "args": [
    null,
    "https://reqres.in/api/users/2"
  ]
}